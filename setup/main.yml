---
### Playbook for configuring a server to work with Scriter
#
# Be sure to change the password in vars when deploying to production
#

- hosts: localhost 
  remote_user: root
  vars:
    db_username: scriter
    db_password: scriter_pass
    web_db: scriter_web
  tasks:
    # Update
    - name: update system
      apt:
        name: "*"

    # Install Pip, Pyscopg2, and Postgres
    - name: pip install
      apt:
        name: python-pip
    - name: psycopg2 prereq (libpq-dev)
      apt:
        name: libpq-dev
    - name: psycopg2 install
      apt:
        name: python-psycopg2
    - name: postgresql install
      apt:
        name: postgresql
        state: latest
    - name: postgresql activate
      service:
        name: postgresql
        state: started

    # Configure Python libraries in a Virtualenv
    - name: virtualenv install
      apt:
        name: virtualenv
    - name: install Python libs
      pip:
        requirements: "{{ playbook_dir }}/requirements.txt"
        virtualenv: "{{ playbook_dir }}/../venv"
        virtualenv_python: python3

    # Configure Postgres DB's for project
    - name: drop database if exists (scriter_ingest)
      become: true
      become_user: postgres
      postgresql_db:
        name: scriter_ingest
        state: absent
    - name: create database (scriter_ingest)
      become: true
      become_user: postgres
      postgresql_db: 
        name: scriter_ingest
        state: present
    - name: configure service account (scriter_ingest)
      become: true
      become_user: postgres
      postgresql_user:
        db: scriter_ingest
        name: "{{ db_username }}"
        password: "{{ db_password}}"
        priv: "ALL"
        encrypted: yes
        role_attr_flags: CREATEDB

    - name: drop database if exists (scriter_web)
      become: true
      become_user: postgres
      postgresql_db:
        name: scriter_web
        state: absent
    - name: create database (scriter_web)
      become: true
      become_user: postgres
      postgresql_db:
        name: scriter_web
        state: present
    - name: configure service account (scriter_web)
      become: true
      become_user: postgres
      postgresql_user:
        db: scriter_web
        name: "{{ db_username }}"
        password: "{{ db_password}}"
        priv: "ALL"
        encrypted: yes
        role_attr_flags: CREATEDB

    # Configure Django environment variables
    - name: make profile.d/scriter.sh
      file:
        path: /etc/profile.d/scriter.sh
        state: touch
        mode: '0644'
    - name: add DB username to profile.d
      lineinfile:
        path: /etc/profile.d/scriter.sh
        line: "export DB_USER={{ db_username }}"
    - name: add DB password to profile.d
      lineinfile:
        path: /etc/profile.d/scriter.sh
        line: "export DB_PASS={{ db_password }}"
    - name: add DB name to profile.d
      lineinfile:
        path: /etc/profile.d/scriter.sh
        line: "export DB_NAME={{ web_db }}"

    # Install Apache webserver
    - name: apache install
      apt:
        name: apache2
        state: latest
    - name: apache add-on (apache2-utils)
      apt:
        name: apache2-utils
        state: latest
    - name: apache add-on (ssl-cert)
      apt:
        name: ssl-cert
        state: latest
    - name: apache activate
      service:
        name: apache2
        state: started

    # Configure a service account
    - name: add service account
      user: 
        name: scriter
        shell: /bin/bash
    - name: change directory ownership
      file:
        name: "{{ playbook_dir }}/.."
        owner: scriter
        group: scriter
        recurse: yes
    - name: source virtualenv
      lineinfile:
        path: /home/scriter/.bashrc
        line: "source {{ playbook_dir }}/../venv/bin/activate"
    - name: source env variables
      lineinfile:
        path: /home/scriter/.bashrc
        line: "source /etc/profile.d/scriter.sh"
